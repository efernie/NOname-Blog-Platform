var githubapi = require('node-github')
  , Routes = require('./routes')
  , _ = require('underscore')
  , Q = require('q')
  , request = require('request')
  ;

function Github (opts) {
  var self = this;
  self.opts = opts || {};
  self.Routes = Routes(self.opts);

  return this;
};

Github.prototype.search = function search (keyword) {
  var self = this
    , deferred = Q.defer()
    , results = []
    ;

  self.checkRateLimit();
  request('https://api.github.com/legacy/repos/search/' + keyword , function (error, response, body) {
    if (!error && response.statusCode == 200) {
      var parseBody = JSON.parse( body ).repositories;
      _.each( parseBody , function (repo) {
        var resultsObj = {
            name : repo.name
          , url : repo.url
          , watchers : repo.watchers
        };

        results.push( resultsObj );
      });

      deferred.resolve(results);
    }
  });

  return deferred.promise;
};

Github.prototype.checkRateLimit = function checkRateLimit () {
  request('https://api.github.com/rate_limit' , function ( error, response, body ) {
    if (!error && response.statusCode == 200) {
      console.log(body);
    }
  });
}

module.exports = function (opts) {
  return new Github(opts);
};