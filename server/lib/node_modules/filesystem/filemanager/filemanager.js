var fs = require('fs')
  , buffer = require('buffer')
  , Routes = require('./routes')
  , _ = require('underscore')
  , Q = require('q')
  , stream = require('stream')
  ;

function FileManager (opts) {
  var self = this;
  self.opts = opts || {};
  self.Routes = Routes(self.opts);

  return this;
};

FileManager.prototype.getOne = function listAll (filename, type) {
  var self = this
    , deferred = Q.defer()
    ;

  fs.readFile(filename + '.' + type, 'utf8', function (err, data) {
    deferred.resolve(data)
  });

  return deferred.promise;
};

FileManager.prototype.saveFile = function saveFile (filename, type, data) {
  var self = this
    , deferred = Q.defer()
    , fullName = filename + '.' + type
    ;

  fs.writeFile(fullName, data.file , 'utf8', function (err) {
    if(err){ deferred.resolve({ 'error': true }); }
    deferred.resolve({ 'success' : true });
  });
  return deferred.promise;
};

module.exports = function (opts) {
  return new FileManager(opts);
};