var fs = require('fs')
  , Routes = require('./routes')
  , _ = require('underscore')
  , Q = require('q')
  ;

function FileList (opts) {
  var self = this;
  self.opts = opts || {};
  self.Routes = Routes(self.opts);

  return this;
};

FileList.prototype.listAll = function listAll (directory) {
  var self = this
    , deferred = Q.defer()
    , results = []
    , regex = /^\./
    ;

  fs.readdir(self.opts[directory], function (err, files) {
    _.each(files, function (file) {
      if ( !regex.test(file) ) {
        results.push(file);
      }
    });
    deferred.resolve(results);
  });
  return deferred.promise;
};

FileList.prototype.getFile = function getFile (filename, type) {
  var self = this
    , deferred = Q.defer()
    ;

  fs.readFile(filename + '.' + type, 'utf8', function (err, data) {
    deferred.resolve(data)
  });

  return deferred.promise;
};

module.exports = function (opts) {
  return new FileList(opts);
};